{"version":3,"sources":["bucket-policy.js"],"names":[],"mappings":"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","file":"bucket-policy.js","sourcesContent":["/*\n * Minio Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015 Minio, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport _ from 'lodash'\nimport * as errors from './errors';\nimport { isValidBucketName } from './helpers'\n\nexport const Policy = {\n  NONE: 'none',\n  READONLY: 'readonly',\n  WRITEONLY: 'writeonly',\n  READWRITE: 'readwrite'\n}\n\nconst resourcePrefix = 'arn:aws:s3:::'\n\nconst readActions = {\n  bucket: [ 's3:GetBucketLocation' ],\n  object: [ 's3:GetObject' ]\n}\n\nconst writeActions = {\n  bucket: [ 's3:GetBucketLocation', 's3:ListBucketMultipartUploads' ],\n  object: [ 's3:AbortMultipartUpload', 's3:DeleteObject',\n            's3:ListMultipartUploadParts', 's3:PutObject' ]\n}\n\n// Returns the string version of the bucket policy.\nexport function parseBucketPolicy(policy, bucketName, objectPrefix) {\n  let statements = policy.Statement\n\n  // If there are no statements, it's none.\n  if (statements.length === 0) return Policy.NONE\n\n  let bucketResource = `${resourcePrefix}${bucketName}`\n  let objectResource = `${resourcePrefix}${bucketName}/${objectPrefix}`\n\n  let actions = {\n    bucket: [],\n    object: []\n  }\n\n  // Loop through the statements and aggregate actions which are allowed.\n  for (let i = 0; i < statements.length; i++) {\n    let statement = statements[i]\n\n    // Normalize the statement, as AWS will drop arrays with length 1.\n    statement = normalizeStatement(statement)\n\n    // Verify the statement before we union-ize the actions.\n    if (!_.some(statement.Principal.AWS, value => value == '*')) continue\n    if (statement.Effect != 'Allow') continue\n\n    // Check for object actions or bucket actions, depending on the resource.\n    if (pertainsTo(statement, objectResource)) {\n      actions.object = _.union(actions.object, statement.Action)\n    } else if (pertainsTo(statement, bucketResource)) {\n      actions.bucket = _.union(actions.bucket, statement.Action)\n    }\n  }\n\n  // Check for permissions.\n  let canRead = false\n  let canWrite = false\n\n  // If it has a subarray inside, there are full permissions to either\n  // read, write, or both.\n  if (isSubArrayOf(actions.bucket, writeActions.bucket) &&\n      isSubArrayOf(actions.object, writeActions.object)) {\n    canWrite = true\n  }\n\n  if (isSubArrayOf(actions.bucket, readActions.bucket) &&\n      isSubArrayOf(actions.object, readActions.object)) {\n    canRead = true\n  }\n\n  if (canRead && canWrite) return Policy.READWRITE\n  else if (canRead) return Policy.READONLY\n  else if (canWrite) return Policy.WRITEONLY\n  else return Policy.NONE\n}\n\n// Generate a statement payload to submit to S3 based on the given policy.\nexport function generateBucketPolicy(policy, bucketName, objectPrefix) {\n  if (!isValidBucketName(bucketName)) {\n    throw new errors.InvalidBucketNameError(`Invalid bucket name: ${bucketName}`)\n  }\n  if (!isValidBucketPolicy(policy)) {\n      throw new errors.InvalidBucketPolicyError(`Invalid bucket policy: ${bucketPolicy}` +\n                                                `(must be 'none', 'readonly', 'writeonly', or 'readwrite')`)\n  }\n\n  // Merge the actions together based on the given policy.\n  let actions = {\n    bucket: [],\n    object: []\n  }\n\n  if (policy == Policy.READONLY || policy == Policy.READWRITE) {\n    // Do read statements.\n    actions.bucket = _.concat(actions.bucket, readActions.bucket)\n    actions.object = _.concat(actions.object, readActions.object)\n  }\n\n  if (policy == Policy.WRITEONLY || policy == Policy.READWRITE) {\n    // Do write statements.\n    actions.bucket = _.concat(actions.bucket, writeActions.bucket)\n    actions.object = _.concat(actions.object, writeActions.object)\n  }\n\n  // Drop any duplicated actions.\n  actions.bucket = _.uniq(actions.bucket)\n  actions.object = _.uniq(actions.object)\n\n  // Form statements from the actions. We'll create three statements:\n  // one for basic bucket permissions, one for basic object permissions,\n  // and finally a special statement for ListBucket, which should be\n  // handled separately.\n  let statements = []\n\n  if (actions.bucket.length > 0) {\n    statements.push(createStatement(actions.bucket, `${resourcePrefix}${bucketName}`))\n  }\n\n  if (actions.object.length > 0) {\n    statements.push(createStatement(actions.object, `${resourcePrefix}${bucketName}/${objectPrefix}*`))\n  }\n\n  // If reading permission is on, add ListBucket.\n  if (policy == Policy.READONLY || policy == Policy.READWRITE) {\n    let listBucketStatement = createStatement([ 's3:ListBucket' ], `${resourcePrefix}${bucketName}`)\n\n    // It has a condition on it if there is a prefix, thus we do it separately.\n    if (objectPrefix !== '') {\n      listBucketStatement.Condition = { StringEquals: { 's3:prefix': objectPrefix } }\n    }\n\n    statements.push(listBucketStatement)\n  }\n\n  // s3 requires a wrapper around the statements.\n  return {\n    'Version': '2012-10-17',\n    'Statement': statements\n  }\n}\n\nexport function isValidBucketPolicy(policy) {\n  return policy == Policy.NONE ||\n         policy == Policy.READONLY ||\n         policy == Policy.WRITEONLY ||\n         policy == Policy.READWRITE\n}\n\n// Checks to see if the parent array has all the values in the child array.\n// Take the intersection for both. If the lengths are the same, the contents\n// of the child are inside the parent.\nfunction isSubArrayOf(parent, child) {\n  return (_.intersection(parent, child)).length == child.length\n}\n\n// Checks if the statement pertains to the given resource. Returns a boolean.\nfunction pertainsTo(statement, resource) {\n  let resources = statement.Resource\n\n  for (let i = 0; i < resources.length; i++) {\n    if (_.startsWith(resources[i], resource)) return true\n  }\n\n  return false\n}\n\n// Create an s3 Allow Statement.\nfunction createStatement(action, resource) {\n  return {\n    Sid: '',\n    Effect: 'Allow',\n    Principal: { 'AWS': ['*'] },\n    Action: action,\n    Resource: [ resource ]\n  }\n}\n\n// AWS will sometimes drop arrays of length 1 for their values, so normalize\n// these back to arrays with length 1.\nfunction normalizeStatement(statement) {\n  if (typeof statement.Principal.AWS === 'string')\n    statement.Principal.AWS = [ statement.Principal.AWS ]\n\n  if (typeof statement.Action === 'string')\n    statement.Action = [ statement.Action ]\n\n  if (typeof statement.Resource === 'string')\n    statement.Resource = [ statement.Resource ]\n\n  return statement\n}\n"],"sourceRoot":"/source/"}